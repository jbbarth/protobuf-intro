// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pirate.proto

/*
Package pirate is a generated protocol buffer package.

It is generated from these files:
	pirate.proto

It has these top-level messages:
	Captain
	CrewMember
	Boat
*/
package pirate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// assets
type Boat_PropulsionType int32

const (
	Boat_WIND    Boat_PropulsionType = 0
	Boat_COAL    Boat_PropulsionType = 1
	Boat_NUCLEAR Boat_PropulsionType = 2
)

var Boat_PropulsionType_name = map[int32]string{
	0: "WIND",
	1: "COAL",
	2: "NUCLEAR",
}
var Boat_PropulsionType_value = map[string]int32{
	"WIND":    0,
	"COAL":    1,
	"NUCLEAR": 2,
}

func (x Boat_PropulsionType) String() string {
	return proto.EnumName(Boat_PropulsionType_name, int32(x))
}
func (Boat_PropulsionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Captain struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Hook bool   `protobuf:"varint,4,opt,name=hook" json:"hook,omitempty"`
}

func (m *Captain) Reset()                    { *m = Captain{} }
func (m *Captain) String() string            { return proto.CompactTextString(m) }
func (*Captain) ProtoMessage()               {}
func (*Captain) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Captain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Captain) GetHook() bool {
	if m != nil {
		return m.Hook
	}
	return false
}

type CrewMember struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Rank string `protobuf:"bytes,2,opt,name=rank" json:"rank,omitempty"`
}

func (m *CrewMember) Reset()                    { *m = CrewMember{} }
func (m *CrewMember) String() string            { return proto.CompactTextString(m) }
func (*CrewMember) ProtoMessage()               {}
func (*CrewMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CrewMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CrewMember) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

type Boat struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// crew
	Captain        *Captain            `protobuf:"bytes,2,opt,name=captain" json:"captain,omitempty"`
	Sailors        []*CrewMember       `protobuf:"bytes,5,rep,name=sailors" json:"sailors,omitempty"`
	PropulsionKind Boat_PropulsionType `protobuf:"varint,7,opt,name=propulsion_kind,json=propulsionKind,enum=Boat_PropulsionType" json:"propulsion_kind,omitempty"`
	// Types that are valid to be assigned to PropulsionAttribute:
	//	*Boat_CoalType
	//	*Boat_PlutoniumIsotope
	PropulsionAttribute isBoat_PropulsionAttribute `protobuf_oneof:"propulsion_attribute"`
}

func (m *Boat) Reset()                    { *m = Boat{} }
func (m *Boat) String() string            { return proto.CompactTextString(m) }
func (*Boat) ProtoMessage()               {}
func (*Boat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isBoat_PropulsionAttribute interface {
	isBoat_PropulsionAttribute()
}

type Boat_CoalType struct {
	CoalType string `protobuf:"bytes,8,opt,name=coalType,oneof"`
}
type Boat_PlutoniumIsotope struct {
	PlutoniumIsotope int32 `protobuf:"varint,9,opt,name=plutoniumIsotope,oneof"`
}

func (*Boat_CoalType) isBoat_PropulsionAttribute()         {}
func (*Boat_PlutoniumIsotope) isBoat_PropulsionAttribute() {}

func (m *Boat) GetPropulsionAttribute() isBoat_PropulsionAttribute {
	if m != nil {
		return m.PropulsionAttribute
	}
	return nil
}

func (m *Boat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Boat) GetCaptain() *Captain {
	if m != nil {
		return m.Captain
	}
	return nil
}

func (m *Boat) GetSailors() []*CrewMember {
	if m != nil {
		return m.Sailors
	}
	return nil
}

func (m *Boat) GetPropulsionKind() Boat_PropulsionType {
	if m != nil {
		return m.PropulsionKind
	}
	return Boat_WIND
}

func (m *Boat) GetCoalType() string {
	if x, ok := m.GetPropulsionAttribute().(*Boat_CoalType); ok {
		return x.CoalType
	}
	return ""
}

func (m *Boat) GetPlutoniumIsotope() int32 {
	if x, ok := m.GetPropulsionAttribute().(*Boat_PlutoniumIsotope); ok {
		return x.PlutoniumIsotope
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Boat) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Boat_OneofMarshaler, _Boat_OneofUnmarshaler, _Boat_OneofSizer, []interface{}{
		(*Boat_CoalType)(nil),
		(*Boat_PlutoniumIsotope)(nil),
	}
}

func _Boat_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Boat)
	// propulsion_attribute
	switch x := m.PropulsionAttribute.(type) {
	case *Boat_CoalType:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.CoalType)
	case *Boat_PlutoniumIsotope:
		b.EncodeVarint(9<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.PlutoniumIsotope))
	case nil:
	default:
		return fmt.Errorf("Boat.PropulsionAttribute has unexpected type %T", x)
	}
	return nil
}

func _Boat_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Boat)
	switch tag {
	case 8: // propulsion_attribute.coalType
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PropulsionAttribute = &Boat_CoalType{x}
		return true, err
	case 9: // propulsion_attribute.plutoniumIsotope
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PropulsionAttribute = &Boat_PlutoniumIsotope{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Boat_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Boat)
	// propulsion_attribute
	switch x := m.PropulsionAttribute.(type) {
	case *Boat_CoalType:
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CoalType)))
		n += len(x.CoalType)
	case *Boat_PlutoniumIsotope:
		n += proto.SizeVarint(9<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.PlutoniumIsotope))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Captain)(nil), "Captain")
	proto.RegisterType((*CrewMember)(nil), "CrewMember")
	proto.RegisterType((*Boat)(nil), "Boat")
	proto.RegisterEnum("Boat_PropulsionType", Boat_PropulsionType_name, Boat_PropulsionType_value)
}

func init() { proto.RegisterFile("pirate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0xd7, 0xd9, 0xd9, 0xee, 0xab, 0xcc, 0x12, 0x86, 0xe4, 0xe0, 0xa1, 0x14, 0x84, 0x1e,
	0xa4, 0xb0, 0xe9, 0xd5, 0xc3, 0x56, 0x85, 0x0d, 0xe7, 0x94, 0xa0, 0x78, 0x94, 0x6c, 0x0b, 0x18,
	0xd6, 0xe6, 0x0b, 0x69, 0x8a, 0xf8, 0xdb, 0xfc, 0x73, 0xd2, 0xce, 0x6d, 0x8a, 0x7a, 0x7b, 0x79,
	0x9f, 0xbc, 0x7c, 0x0f, 0x04, 0x8e, 0xb4, 0x34, 0xdc, 0x8a, 0x54, 0x1b, 0xb4, 0x18, 0x0f, 0xc0,
	0xcb, 0xb8, 0xb6, 0x5c, 0x2a, 0x42, 0xc0, 0x55, 0xbc, 0x10, 0xd4, 0x89, 0x9c, 0xa4, 0xcb, 0x9a,
	0x5c, 0x77, 0xaf, 0x88, 0x6b, 0xea, 0x46, 0x4e, 0xe2, 0xb3, 0x26, 0xc7, 0x97, 0x00, 0x99, 0x11,
	0x6f, 0x77, 0xa2, 0x58, 0x08, 0xf3, 0xdf, 0xca, 0x70, 0xb5, 0xa6, 0xed, 0x4d, 0x57, 0xe7, 0xf8,
	0xa3, 0x0d, 0xee, 0x18, 0xb9, 0xfd, 0x73, 0x10, 0x83, 0xb7, 0xdc, 0x58, 0x34, 0x9b, 0x60, 0xe8,
	0xa7, 0x5f, 0x56, 0x6c, 0x0b, 0xc8, 0x19, 0x78, 0x25, 0x97, 0x39, 0x9a, 0x92, 0x76, 0xa2, 0x83,
	0x24, 0x18, 0x06, 0xe9, 0x5e, 0x83, 0x6d, 0x19, 0xb9, 0x82, 0x63, 0x6d, 0x50, 0x57, 0x79, 0x29,
	0x51, 0xbd, 0xac, 0xa5, 0x5a, 0x51, 0x2f, 0x72, 0x92, 0xde, 0xb0, 0x9f, 0xd6, 0xe7, 0xd3, 0x87,
	0x1d, 0x7c, 0x7c, 0xd7, 0x82, 0xf5, 0xf6, 0x8f, 0x6f, 0xa5, 0x5a, 0x91, 0x53, 0xf0, 0x97, 0xc8,
	0xf3, 0x9a, 0x51, 0xbf, 0x36, 0x9c, 0xb4, 0xd8, 0xae, 0x21, 0xe7, 0x10, 0xea, 0xbc, 0xb2, 0xa8,
	0x64, 0x55, 0x4c, 0x4b, 0xb4, 0xa8, 0x05, 0xed, 0x46, 0x4e, 0xd2, 0x99, 0xb4, 0xd8, 0x2f, 0x12,
	0x0f, 0xa0, 0xf7, 0xf3, 0x1a, 0xf1, 0xc1, 0x7d, 0x9e, 0xce, 0xaf, 0xc3, 0x56, 0x9d, 0xb2, 0xfb,
	0xd1, 0x2c, 0x74, 0x48, 0x00, 0xde, 0xfc, 0x29, 0x9b, 0xdd, 0x8c, 0x58, 0xd8, 0x1e, 0x9f, 0x40,
	0xff, 0x9b, 0x3d, 0xb7, 0xd6, 0xc8, 0x45, 0x65, 0xc5, 0xe2, 0xb0, 0xf9, 0xad, 0x8b, 0xcf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xdb, 0xbe, 0x53, 0xc9, 0xbd, 0x01, 0x00, 0x00,
}
